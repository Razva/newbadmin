#!/bin/bash
clear

# Style
red="$(tput setaf 1)"
green="$(tput setaf 2)"
yellow="$(tput setaf 3)"
cyan="$(tput setaf 6)"
normal="$(tput sgr0)"
bold="$(tput bold)"

h1() { printf '%s=== %s%s' "$green" "$1" "$normal"; }
h2() { printf '%s== %s%s' "$yellow" "$1" "$normal"; }
h3() { printf '%s= %s%s' "$cyan" "$1" "$normal"; }
ye() { printf '%s' "$yellow" "$1" "$normal"; }
cy() { printf '%s' "$cyan" "$1" "$normal"; }

# OS Updates
h1 'Update OS? [Y/n] ' ; read -r update
case ${update,,} in
        [yY][eE][sS]|[yY]|"")
                h2 $'Updating OS\n'
                apt -y update && apt -y dist-upgrade && apt -y autoremove && aot -y install sudo
                h2 $'Done - OS Updates\n\n'
                ;;
        *) h2 $'Skipping OS Updates\n\n';
esac

# Hostname
h1 'Set Hostname? [Y/n] ' ; read -r nhostname
case ${nhostname,,} in
        [yY][eE][sS]|[yY]|"")
                h2 $'Setting Hostname\n'
                h3 'New hostname: ' ; read -r hostname
                hostnamectl set-hostname $hostname --static
                h2 $'Done - Hostname\n\n'
                ;;
        *) h2 $'Skipping Hostname\n\n';
esac

# Time
h1 'Set Time? [Y/n] ' ; read -r time
case ${time,,} in
        [yY][eE][sS]|[yY]|"")
		h2 $'Setting Time\n'
		apt -y -q install chrony
		systemctl enable chrony
		systemctl start chrony
                timedatectl set-timezone Europe/Bucharest
		h2 $'Done - Time\n\n'
                ;;
        *) h2 $'Skipping Time\n\n';
esac

# Utilities
h1 'Install Utilities? [Y/n] ' ; read -r deps
case ${deps,,} in
        [yY][eE][sS]|[yY]|"")
                h2 $'Installing Dependencies and Utilities\n'
                apt install -y nano wget screen tar unzip qemu-guest-agent acpid
                h2 $'Done - Dependencies and Utilities\n\n'
                ;;
        *) h2 $'Skipping Dependencies and Utilities\n\n'
esac

# Auto Updaters
h1 'Set Auto-Updaters? [Y/n] ' ; read -r time
case ${time,,} in
        [yY][eE][sS]|[yY]|"")
                h2 $'Installing Unnatended Upgrades\n'
                apt install -y unattended-upgrades
		
		h2 'Patching config ... '
		sed -i 's|//      "origin=Debian,codename=${distro_codename}-updates"|        "origin=Debian,codename=${distro_codename}-updates"|g' /etc/apt/apt.conf.d/50unattended-upgrades
		sed -i 's|//      "origin=Debian,codename=${distro_codename}-proposed-updates"|        "origin=Debian,codename=${distro_codename}-proposed-updates"|g' /etc/apt/apt.conf.d/50unattended-upgrades
                ye $'done!\n\n'	
		
		dpkg-reconfigure --priority=low unattended-upgrades
                h2 $'Done - Unnatended Upgrades\n\n'
                ;;
        *) h2 $'Skipping Auto-Updaters\n\n';
esac

# PHP
h1 'Install Modern PHP? [Y/n] ' ; read -r time
case ${time,,} in
        [yY][eE][sS]|[yY]|"")
                h2 $'Adding PHP Repo\n'
		apt -y install lsb-release apt-transport-https ca-certificates
		wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
		echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/php.list
		apt -y update && apt -y dist-upgrade && apt -y autoremove
                h2 $'Done - Adding PHP Repo\n\n'
		h2 $'PHP Version: ' ; read -r phpversion
			apt -y install $phpversion-fpm
			systemctl enable php$phpversion-fpm
			systemctl start php$phpversion-fpm
		h2 $'Done - Installing Modern PHP\n\n'
                ;;
        *) h2 $'Skipping Modern PHP\n\n';
esac

# NGINX
h1 'Install NGINX? [Y/n] ' ; read -r time
case ${time,,} in
        [yY][eE][sS]|[yY]|"")
                h2 $'Installing NGINX\n'
			systemctl disable --now apache2
			apt -y install curl gnupg2 ca-certificates lsb-release
			echo "deb http://nginx.org/packages/debian `lsb_release -cs` nginx" \ | sudo tee /etc/apt/sources.list.d/nginx.list
			echo -e "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 900\n" \ | sudo tee /etc/apt/preferences.d/99nginx
			curl -o /etc/apt/trusted.gpg.d/nginx_signing.asc https://nginx.org/keys/nginx_signing.key
			apt -y update && apt -y dist-upgrade && apt -y autoremove && apt -y install nginx
		h2 $'Done - Installing NGINX\n\n'
                ;;
        *) h2 $'Skipping NGINX\n\n';
esac

# MariaDB

h1 $'Everything Done!\n\n'
